#!/bin/bash

# Any file extensions you want to be excluded from syntax highlighting
EXLUDE_SYNTAX='(jpg|jpeg|png|pdf)'

# Force any file extension in REPLACE_WHAT with corresponding REPLACE_WITH
REPLACE_WHAT=(erb)
REPLACE_WITH=(rb)

# The domain to upload to
DOMAIN='gobin.io'

function help {
    echo "Usage: `basename $0` FILE [HORDE] 
        
Uploads file to $DOMAIN and returns link with syntax highlighting
param attached based of file extension.  Will copy link to clipboard
if xsel is installed."
}

# Verfiy REPLACE Arrays are the same length
if [[ "${#REPLACE_WHAT[@]}" != "${#REPLACE_WITH[@]}" ]]; then
    echo "Error: REPLACE_WHAT and REPLACE_WITH must be the same lengths"
    exit 1
fi

# Print out help
for arg in "$@"; do
    if [[ "$arg" = "-h" || "$arg" = "--help" ]]; then
        help
        exit
    fi
done

# Verify horde name
if ! [[ $2 =~ ^[a-zA-Z]*$ ]]; then
    echo "Error: horde name must contain only letters"
    echo ""
    help
    exit 1
fi

# Verify file operand exists
if [ -z $1 ]; then
    echo "Error: missing file operand"
    echo ""
    help
    exit 1
fi

# Verify file
if ! [ -f $1 ]; then
    echo "Error: cannot stat '$1': No such file or directory"
    echo ""
    help
    exit 1
fi

# Parse extension with exludes
language=''
if [[ $1 =~ \.[a-zA-Z]+$ ]] && ! [[ $1 =~ \.$EXLUDE_SYNTAX$ ]]; then
    language=`echo $1 | sed -rn 's/.*\.([a-zA-Z]+$)/\1/p'`
fi

# Handle replaces. It's nasty, I know
if [ -n "$language" ]; then
    #length=${#REPLACE_WHAT[@]}
    for i in "${!REPLACE_WHAT[@]}"; do
        if [[ "${REPLACE_WHAT[$i]}" = "$language" ]]; then
            language=${REPLACE_WITH[$i]}
            break
        fi
    done
fi

# Give user chance to change language
if [ -z "$language" ]; then
    read -p "Language syntax highlighting: " formatting
else
    read -p "Language syntax highlighting (default=$language): " formatting 
fi

# Deal with users response
if [ -n "$formatting" ]; then
    formatting='?'$formatting
elif [ -n "$language" ]; then
    formatting='?'$language
fi

# Upload and get link
link=`cat $1 | curl -F 'gob=<-' http://gobin.io/$2 2>/dev/null | tr -d '\n'`$formatting
# Copy link to clipboard if xsel installed
if xsel -v foo >/dev/null 2>&1; then
    echo $link | tr -d '\n' | xsel -b -i
fi
# Print out link
echo $link
exit
